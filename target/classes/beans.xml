<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<context:annotation-config/>
	
	<mvc:annotation-driven>
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<context:component-scan base-package="com.training.spring" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Configuration properties -->
	<bean 
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:database.properties</value>
		</property>
	</bean>
	
	<bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/jsp/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
    
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">      
        <property name="order" value="1" />      
       <!--  <property name="mediaTypes">        
            <map>           
                <entry key="xlsx" value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />        
            </map>      
        </property>   -->    
 
        <property name="defaultViews">        
            <list>          
               
 
                <!--  XLSX "Excel" view -->         
                <bean id="employeeXls" class="com.training.spring.web.EmployeeExcelView"/>
            </list>      
        </property>      
 
        
    </bean>
    
						
	<bean id="greetingService" class="com.training.spring.greeting.GreetingServiceImpl">
		<property name="greeting">
			<value>Buenos Dias!</value>
		</property>
	</bean>
	
	<!-- byName byType constructor autodetect-->
	<bean id="customer" class="com.training.spring.model.Customer" >
	<!--	<property name="address" ref="address"></property>   Setter Injection -->
		<constructor-arg ref="address"></constructor-arg>  <!-- Constructor Injection -->
	</bean>
		
	<bean id="address" class="com.training.spring.model.Address" >
		<property name="fulladdress" value="Enter Full Address"></property>
	</bean>
	
	<bean id="store" class="com.training.spring.model.Store" autowire="byType" >
		
	</bean>
	
	<!--  Special Spring Beans 
	<bean id="postProcessor" class="com.training.spring.di.PostProcessor" >
		
	</bean>
	-->
	
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    
    <!-- JNDI Configuration 
    <bean id="dataSourceJNDI" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/myDatabaseName"/>
    </bean>-->
	
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean> -->
	
	<!-- <bean id="employeeDAO" class="com.training.spring.dao.EmployeeDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
		<property name="transactionTemplate" ref="transactionTemplate"></property>
	</bean> 
	
	<bean id="abstractTxDefinition" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
			lazy-init="true">
		 <property name="proxyInterfaces">
			<list>
				<value>
					com.training.spring.dao.IEmployeeDAO
				</value>
			</list>
		</property> 
		<property name="target">
			<ref bean="employeeDAOTarget" />
		</property>
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributeSource">
			<ref bean="transactionAttributeSource" />
		</property>
	</bean>


	<bean id="employeeDAO" parent="abstractTxDefinition">
		<property name="target">
			<ref bean="employeeDAOTarget" />
		</property>
	</bean>
	
	<bean id="transactionAttributeSource" class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="createEmployee">
					PROPAGATION_REQUIRED, ISOLATION_DEFAULT
				</prop>
				<prop key="getAllEmployees">
					PROPAGATION_MANDATORY, ISOLATION_DEFAULT
				</prop>
			</props>
		</property>
	</bean>-->
	
	<!-- Singleton ThreadSafe class -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
			  <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
			  <prop key="hibernate.default_schema">creamos_trg</prop>
			  <prop key="show_sql">true</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.training.spring.model"/>
		<!-- <property name="mappingResources">
			<list>
				<value>com.training.spring.model.Employee</value>			
			</list>
		</property>-->	
	</bean>
</beans>